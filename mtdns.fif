// automatically generated from `/Users/stas/code/ton/crypto/smartcont/stdlib.fc` `mtdns.fc` 
PROGRAM{
  DECLPROC recv_internal
  DECLPROC recv_external
  128517 DECLMETHOD resolve
  recv_internal PROC:<{
    //  in_msg
    DROP	// 
  }>
  recv_external PROC:<{
    //  in_msg
    0 PUSHINT	//  in_msg len=0
    NEWC	//  in_msg len=0 str
    WHILE:<{
      s0 s2 XCHG	//  str len in_msg
      8 LDU	//  str len b in_msg
      OVER	//  str len b in_msg b
    }>DO<{	//  str len b in_msg
      s0 s3 XCHG	//  in_msg len b str
      8 STU	//  in_msg len str
      SWAP	//  in_msg str len
      INC	//  in_msg str len
      SWAP	//  in_msg len str
    }>	//  str len b in_msg
    2DROP	//  str len
    WHILE:<{
      DUP	//  str len len
      33 LESSINT	//  str len _15
    }>DO<{	//  str len
      0 PUSHINT	//  str len _16=0
      ROT	//  len _16=0 str
      8 STU	//  len str
      SWAP	//  str len
      INC	//  str len
    }>	//  str len
    DROP	//  str
    ENDC	//  _22
    CTOS	//  str_slc
    c4 PUSH	//  str_slc _25
    CTOS	//  str_slc cs
    LDDICT	//  str_slc records cs
    ENDS
    65432 PUSHINT	//  str_slc records _32=65432
    NEWC	//  str_slc records _32=65432 _33
    32 STU	//  str_slc records _35
    s2 PUSH	//  str_slc records _35 str_slc
    SBITS	//  str_slc records _35 _36
    s3 s2 s2 PUXC2	//  str_slc _35 str_slc records _36
    DICTSETB	//  str_slc records
    NEWC	//  str_slc records _38
    STDICT	//  str_slc _39
    ENDC	//  str_slc _40
    c4 POP
    ACCEPT
  }>
  resolve PROC:<{
    //  strs
    0 PUSHINT	//  strs len=0
    NEWC	//  strs len=0 str
    WHILE:<{
      s0 s2 XCHG	//  str len strs
      8 LDU	//  str len b strs
      OVER	//  str len b strs b
    }>DO<{	//  str len b strs
      s0 s3 XCHG	//  strs len b str
      8 STU	//  strs len str
      SWAP	//  strs str len
      INC	//  strs str len
      SWAP	//  strs len str
    }>	//  str len b strs
    2DROP	//  str len
    WHILE:<{
      DUP	//  str len len
      33 LESSINT	//  str len _15
    }>DO<{	//  str len
      0 PUSHINT	//  str len _16=0
      ROT	//  len _16=0 str
      8 STU	//  len str
      SWAP	//  str len
      INC	//  str len
    }>	//  str len
    DROP	//  str
    ENDC	//  _22
    CTOS	//  str_slc
    c4 PUSH	//  str_slc _25
    CTOS	//  str_slc cs
    LDDICT	//  str_slc records cs
    ENDS
    OVER	//  str_slc records str_slc
    SBITS	//  str_slc records _33
    DICTGET
    NULLSWAPIFNOT	//  val found
    IFJMP:<{	//  val
      32 LDU	//  _46 _45
      DROP	//  _35
    }>	//  val
    DROP	// 
    675 PUSHINT	//  _38=675
  }>
}END>c
